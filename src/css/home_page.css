.container {  display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1.1fr;
    gap: 0px 0px;
    grid-auto-flow: row;
    grid-template-areas:
      "twitch-area other-area other-area"
      "twitch-area other-area other-area";
    width: 100%;
    height: 100%;
  }

.backgroundblack {
    background-color: #282c34;
    min-height: 80vh;
  }

.other-area { 
    grid-area: other-area; 
    min-height: 500px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-size: calc(10px + 2vmin);
    color: white;
  }

@media only screen and (max-width: 1026px) {
    .twitch-area {
        display: none;
    }
    .container { 
      display:block; 
      width: 100%;
      height: 100%;
    }
}

  .twitch-area { 
    grid-area: twitch-area; 
    padding: 15px;
  }

:root {
  --d: 2500ms;
  --angle: 90deg;
  --gradX: 100%;
  --gradY: 50%;
  --c1: rgba(168, 239, 255, 1);
  --c2: rgba(168, 239, 255, 0.1);
  }
  
.queuebutton {
  margin: max(1rem, 3vw);
  border: 0.35rem solid;
  border-image: conic-gradient(from var(--angle), var(--c2), var(--c1) 0.1turn, var(--c1) 0.15turn, var(--c2) 0.25turn) 30;
  animation: borderRotate var(--d) linear infinite forwards ;
  }

@keyframes borderRotate {
  100% {
  --angle: 420deg;
  }
  }

@property --angle {
  syntax: '<angle>';
  initial-value: 90deg;
  inherits: true;
}

@property --gradX {
  syntax: '<percentage>';
  initial-value: 50%;
  inherits: true;
}

@property --gradY {
  syntax: '<percentage>';
  initial-value: 0%;
  inherits: true;
}

@keyframes borderRadial {
  20% {
  --gradX: 100%;
  --gradY: 50%;
  }
  40% {
  --gradX: 100%;
  --gradY: 100%;
  }
  60% {
  --gradX: 50%;
  --gradY: 100%;
  }
  80% {
  --gradX: 0%;
  --gradY: 50%;
  }
  100% {
  --gradX: 50%;
  --gradY: 0%;
  }
  }



.pulsetext {
  animation: pulse 5s infinite;
}


@keyframes pulse {
  0% {
    transform: scale(0.95);
  }

  70% {
    transform: scale(1.5);
    color: white;
  }

  100% {
    transform: scale(0.95);
  }
}